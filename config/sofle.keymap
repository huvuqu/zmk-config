/* source key position labels */
#include "includes/keypos_60keys.h"

#define KEYS_L LN0 LN1 LN2 LN3 LN4 LN5 LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left hand
#define KEYS_R RN0 RN1 RN2 RN3 RN4 RN5 RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5 // right hand
#define KEYS_T LH4 LH3 LH2 LH1 LH0 RH0 RH1 RH2 RH3 RH4                                    // thumbs
// Layer define
#define BASE 0
#define NAV 1
#define NUM 2
#define NUM_WORD 3
#define FUN 4
#define ADJUST 5
#define BASE_NOT_HRM 6

// HYPER and MEH define
#define HYPER RS(RC(RG(LALT)))
#define MEH LC(LG(LALT))

// Left magic key
#define LMK LS(LC(LG(LA(F15))))
#define LMK1 LS(LC(LG(LA(F16))))
#define LMK2 LS(LC(LG(LA(F17))))
#define RMK LS(LC(LG(LA(F18))))
#define RMK1 LS(LC(LG(LA(F19))))
#define RMK2 LS(LC(LG(LA(F20))))

#define SPOTLIGHT LG(SPACE)


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

#include "includes/settings.dtsi"
#include "includes/behaviours.dtsi"


// #define ADJUST 3
// #define MOUSE 5
// #define SYM 1

/* Global settings */
#define XXX &none
#define ___ &trans


#define COMBO_TERM_FAST 35
#define COMBO_TERM_SLOW 40
#define COMBO_PRIOR_IDLE 100

// #define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
//     ZMK_HOLD_TAP(NAME, \
//         flavor = "balanced"; \
//         tapping-term-ms = <280>; \
//         quick-tap-ms = <QUICK_TAP_MS>; \
//         require-prior-idle-ms = <150>; \
//         bindings = <HOLD>, <TAP>; \
//         hold-trigger-key-positions = <TRIGGER_POS>; \
//         hold-trigger-on-release; \
//     )
// MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)  // left-hand HRMs
// MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)  // right-hand HRMs

// MAKE_HRM(hml_repeat, &kp, &key_repeat, KEYS_R THUMBS)  // used for HRM-combo
// MAKE_HRM(hmr_lpar_lt, &kp, &lpar_lt, KEYS_L THUMBS)    // "    "   "   "
// MAKE_HRM(hmr_rpar_gt, &kp, &rpar_gt, KEYS_L THUMBS)    // "    "   "   "

/* Nav cluster */
/ {

    combos {
/*                                      60 KEY MATRIX / LAYOUT MAPPING

  ╭────────────────────────────┬────────────────────────────╮ ╭─────────────────────────────┬─────────────────────────────╮
  │  0   1   2   3   4   5     │      6   7   8   9  10  11 │ │ LN5 LN4 LN3 LN2 LN1 LN0     │     RN0 RN1 RN2 RN3 RN4 RN5 │
  │ 12  13  14  15  16  17     │     18  19  20  21  22  23 │ │ LT5 LT4 LT3 LT2 LT1 LT0     │     RT0 RT1 RT2 RT3 RT4 RT5 │
  │ 24  25  26  27  28  29     │     30  31  32  33  34  35 │ │ LM5 LM4 LM3 LM2 LM1 LM0     │     RM0 RM1 RM2 RM3 RM4 RM5 │
  │ 36  37  38  39  40  41  42 │ 43  44  45  46  47  48  49 │ │ LB5 LB4 LB3 LB2 LB1 LB0 LEC │ REC RB0 RB1 RB2 RB3 RB4 RB5 │
  ╰───────╮ 50  51  52  53  54 │ 55  56  57  58  59 ╭───────╯ ╰───────╮ LH4 LH3 LH2 LH1 LH0 │ RH0 RH1 RH2 RH3 RH4 ╭───────╯
          ╰────────────────────┴────────────────────╯                 ╰─────────────────────┴─────────────────────╯         */
        compatible = "zmk,combos";
    
        combo_tog_base_no_hrm {
          timeout-ms = <COMBO_TERM_SLOW>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <38 39 40>;
          layers = <BASE NAV NUM NUM_WORD BASE_NOT_HRM>;
          bindings = <&tog BASE_NOT_HRM>;
        };

        cb_tab {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <14 15>;
          layers = <BASE NAV NUM NUM_WORD BASE_NOT_HRM>;
          bindings = <&kp TAB>;
        };
        cb_spotlight {
          timeout-ms = <COMBO_TERM_SLOW>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <15 16>;
          layers = <BASE BASE_NOT_HRM>;
          bindings = <&kp LG(SPACE)>;
        };
        // cb_changeinputsource {
        //   timeout-ms = <COMBO_TERM_FAST>;
        //   require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
        //   key-positions = <15 16>;
        //   layers = <BASE NAV NUM NUM_WORD BASE_NOT_HRM>;
        //   bindings = <&kp LC(SPACE)>;
        // };
        cb_changeinputsource_en {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <15 28>;
          layers = <BASE NAV NUM>;
          bindings = <&kp LS(LC(LG(LA(E))))>;
        };
        cb_changeinputsource_vi {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <27 40>;
          layers = <BASE NAV NUM NUM_WORD BASE_NOT_HRM>;
          bindings = <&kp LS(LC(LG(LA(V))))>;
        };
        cb_esc {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <28 29>;
          layers = <BASE NAV NUM NUM_WORD BASE_NOT_HRM>;
          bindings = <&kp ESC>;
        };
        cb_close {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <13 14>;
          layers = <BASE NAV NUM NUM_WORD BASE_NOT_HRM>;
          bindings = <&kp LG(W)>;
        };
        cb_new {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <16 17>;
          layers = <BASE NAV NUM NUM_WORD BASE_NOT_HRM>;
          bindings = <&kp LG(T)>;
        };
        cb_paste {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <39 40>;
          layers = <BASE NAV NUM NUM_WORD BASE_NOT_HRM>;
          bindings = <&kp LG(V)>;
        };
        cb_copy {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <38 39>;
          layers = <BASE NAV NUM NUM_WORD BASE_NOT_HRM>;
          bindings = <&kp LG(C)>;
        };
        // cb_cut {
        //   timeout-ms = <COMBO_TERM_FAST>;
        //   require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
        //   key-positions = <38 39>;
        //   layers = <BASE NAV NUM NUM_WORD BASE_NOT_HRM>;
        //   bindings = <&kp LG(X)>;
        // };
        cb_undo {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <37 38>;
          layers = <BASE NAV NUM NUM_WORD BASE_NOT_HRM>;
          bindings = <&kp LG(Z)>;
        };
        cb_redo {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <25 37>;
          layers = <BASE NAV NUM NUM_WORD BASE_NOT_HRM>;
          bindings = <&kp LG(LS(Z))>;
        };
        // cb_cmda {
        //   timeout-ms = <COMBO_TERM_FAST>;
        //   require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
        //   key-positions = <25 26>;
        //   layers = <BASE NAV NUM NUM_WORD BASE_NOT_HRM>;
        //   bindings = <&kp LG(A)>;
        // };
        cb_optbackspace {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <33 34>;
          layers = <BASE NAV NUM NUM_WORD BASE_NOT_HRM>;
          bindings = <&kp LA(BSPC)>;
        };
        cb_cmdbackspace {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <34 48>;
          layers = <BASE NAV NUM NUM_WORD BASE_NOT_HRM>;
          bindings = <&kp RG(BSPC)>;
        };

/*                                      60 KEY MATRIX / LAYOUT MAPPING

  ╭────────────────────────────┬────────────────────────────╮ ╭─────────────────────────────┬─────────────────────────────╮
  │  0   1   2   3   4   5     │      6   7   8   9  10  11 │ │ LN5 LN4 LN3 LN2 LN1 LN0     │     RN0 RN1 RN2 RN3 RN4 RN5 │
  │ 12  13  14  15  16  17     │     18  19  20  21  22  23 │ │ LT5 LT4 LT3 LT2 LT1 LT0     │     RT0 RT1 RT2 RT3 RT4 RT5 │
  │ 24  25  26  27  28  29     │     30  31  32  33  34  35 │ │ LM5 LM4 LM3 LM2 LM1 LM0     │     RM0 RM1 RM2 RM3 RM4 RM5 │
  │ 36  37  38  39  40  41  42 │ 43  44  45  46  47  48  49 │ │ LB5 LB4 LB3 LB2 LB1 LB0 LEC │ REC RB0 RB1 RB2 RB3 RB4 RB5 │
  ╰───────╮ 50  51  52  53  54 │ 55  56  57  58  59 ╭───────╯ ╰───────╮ LH4 LH3 LH2 LH1 LH0 │ RH0 RH1 RH2 RH3 RH4 ╭───────╯
          ╰────────────────────┴────────────────────╯                 ╰─────────────────────┴─────────────────────╯         */
        // + - * % 
        cb_plus {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <14 26>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp PLUS>;
        };
        cb_minus {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <15 27>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp MINUS>;
        };
        cb_star {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <16 28>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp ASTERISK>;
        };
        cb_percent {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <17 29>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp PRCNT>;
        };
        // ! & | =
        cb_excl {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <26 38>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp EXCL>;
        };
        cb_amps {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <27 39>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp AMPS>;
        };
        cb_pipe {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <28 40>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp PIPE>;
        };
        cb_equal {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <29 41>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp EQUAL>;
        };
        // ^ $
        cb_caret {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <18 30>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp CARET>;
        };
        cb_dollar {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <21 33>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp DLLR>;
        };
/*                                      60 KEY MATRIX / LAYOUT MAPPING

  ╭────────────────────────────┬────────────────────────────╮ ╭─────────────────────────────┬─────────────────────────────╮
  │  0   1   2   3   4   5     │      6   7   8   9  10  11 │ │ LN5 LN4 LN3 LN2 LN1 LN0     │     RN0 RN1 RN2 RN3 RN4 RN5 │
  │ 12  13  14  15  16  17     │     18  19  20  21  22  23 │ │ LT5 LT4 LT3 LT2 LT1 LT0     │     RT0 RT1 RT2 RT3 RT4 RT5 │
  │ 24  25  26  27  28  29     │     30  31  32  33  34  35 │ │ LM5 LM4 LM3 LM2 LM1 LM0     │     RM0 RM1 RM2 RM3 RM4 RM5 │
  │ 36  37  38  39  40  41  42 │ 43  44  45  46  47  48  49 │ │ LB5 LB4 LB3 LB2 LB1 LB0 LEC │ REC RB0 RB1 RB2 RB3 RB4 RB5 │
  ╰───────╮ 50  51  52  53  54 │ 55  56  57  58  59 ╭───────╯ ╰───────╮ LH4 LH3 LH2 LH1 LH0 │ RH0 RH1 RH2 RH3 RH4 ╭───────╯
          ╰────────────────────┴────────────────────╯                 ╰─────────────────────┴─────────────────────╯         */
      
        
        // [ ] { } ( ) :;
        cb_lbkt {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <18 19>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp LBKT>;
        };
        cb_rbkt { 
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <44 45>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp RBKT>;
        };
        cb_lbrc { 
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <19 20>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp LBRC>;
        };
        cb_rbrc { 
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <45 46>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp RBRC>;
        };
        cb_lpar {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <20 21>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp LPAR>;
        };
        cb_rpar { 
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <46 47>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp RPAR>;
        };
        cb_semi {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <21 22>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp SEMI>;
        };
        cb_colon { 
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <47 48>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp COLON>;
        };
     

        // " ' _ @
        cb_dqt { 
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <19 31>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp DQT>;
        };
        cb_under { 
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <20 32>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp UNDER>;
        };
        // cb_sqt { 
        //   timeout-ms = <COMBO_TERM_FAST>;
        //   require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
        //   key-positions = <20 33>;
        //   layers = <BASE NUM NUM_WORD>;
        //   bindings = <&kp SQT>;
        // };
        cb_at {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <30 31>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp AT>;
        };
        // ` ~  #  backslash
        cb_grave {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <30 44>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp GRAVE>;
        };
        cb_tilde {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <31 45>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp TILDE>;
        };
        cb_hash {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <32 46>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp HASH>;
        };
        cb_backslash {
          timeout-ms = <COMBO_TERM_FAST>;
          require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
          key-positions = <33 47>;
          layers = <BASE NUM NUM_WORD>;
          bindings = <&kp BSLH>;
        };

/*                                      60 KEY MATRIX / LAYOUT MAPPING

  ╭────────────────────────────┬────────────────────────────╮ ╭─────────────────────────────┬─────────────────────────────╮
  │  0   1   2   3   4   5     │      6   7   8   9  10  11 │ │ LN5 LN4 LN3 LN2 LN1 LN0     │     RN0 RN1 RN2 RN3 RN4 RN5 │
  │ 12  13  14  15  16  17     │     18  19  20  21  22  23 │ │ LT5 LT4 LT3 LT2 LT1 LT0     │     RT0 RT1 RT2 RT3 RT4 RT5 │
  │ 24  25  26  27  28  29     │     30  31  32  33  34  35 │ │ LM5 LM4 LM3 LM2 LM1 LM0     │     RM0 RM1 RM2 RM3 RM4 RM5 │
  │ 36  37  38  39  40  41  42 │ 43  44  45  46  47  48  49 │ │ LB5 LB4 LB3 LB2 LB1 LB0 LEC │ REC RB0 RB1 RB2 RB3 RB4 RB5 │
  ╰───────╮ 50  51  52  53  54 │ 55  56  57  58  59 ╭───────╯ ╰───────╮ LH4 LH3 LH2 LH1 LH0 │ RH0 RH1 RH2 RH3 RH4 ╭───────╯
          ╰────────────────────┴────────────────────╯                 ╰─────────────────────┴─────────────────────╯         */
         
    };
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "base";
// ------------------------------------------------------------------------------------------------------------
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | ALT  | ESC | SPACE |  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
//╭──────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────────╮
   &kp GRAVE     &kp N1        &kp N2        &kp N3       &kp N4        &kp N5                                       &kp N6        &kp N7        &kp N8        &kp N9        &kp N0          &kp BSPC
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
   &kp TAB       &kp Q         &kp W         &kp E        &kp R         &kp T                                        &kp Y         &kp U         &kp I         &kp O         &kp P           &kp BSLH
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
   &kp ESC       &hml LSHIFT A &hml LALT S   &hml LCTRL D &hml LCMD F  &hml HYPER G                                 &hmr HYPER H  &hmr RCMD J   &hmr RCTRL K  &hmr RALT L   &hmr RSHFT BSPC &kp SQT
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮  ╭─────────────├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
   &kp LMK     &kp Z         &kp X         &kp C         &hml MEH V    &kp B         &kp C_MUTE       &none         &kp N         &hmr MEH M    &kp COMMA     &kp DOT       &kp FSLH        &kp RMK
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮  ╭─────────────├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
                              &mt LCTRL LMK2 &mt LALT LMK1 &mt LCMD SPOTLIGHT &lt NAV SPACE &mt HYPER  RET      &num_nw NUM NUM &shft_cw    &lt FUN SPOTLIGHT  &lt ADJUST RMK1 &mt MEH RMK2
//                           ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
 
        nav_layer {
            display-name = "nav";
            bindings = <
//╭──────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────────╮
   &trans       &trans        &trans        &trans        &trans        &trans                                       &trans        &trans        &trans         &trans        &trans          &trans
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
   &trans       &kp LA(Q)     &kp LA(W)     &kp LA(E)     &kp LA(R)     &kp LA(T)                                    &kp LA(Y)     &kp LA(U)     &kp LA(I)     &kp LA(O)     &kp LA(P)       &trans
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
   &kp LA(TAB)  &sk LSHIFT    &sk LALT      &sk LCTRL     &sk LCMD      &sk HYPER                                    &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &kp LA(BSPC)    &kp LA(SQT)
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮  ╭─────────────├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
   &trans       &kp LA(Z)     &kp LA(X)    &kp LA(C)      &kp LA(V)     &kp LA(B)         &trans           &trans        &kp END       &kp PG_DN     &kp PG_UP     &kp HOME      &kp LA(FSLH)    &trans
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮  ╭─────────────├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
                              &trans        &trans        &ltog LCMD NAV  &trans        &trans           &trans        &trans        &trans        &trans        &trans
//                           ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        num_layer {
            display-name = "num";
            bindings = <
//╭──────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────────╮
   &trans        &trans        &trans        &trans        &trans        &trans                                       &trans        &trans        &trans        &trans        &trans          &trans
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
   &trans        &trans        &kp N7       &kp N8        &kp N9        &trans                                       &trans        &trans     &trans        &trans        &trans          &trans
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
   &trans        &trans        &kp N4       &kp N5        &kp N6        &trans                                      &sk HYPER     &sk RCMD      &sk RCTRL     &sk RALT      &sk RSHFT       &trans
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮  ╭─────────────├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
   &trans        &trans        &kp N1       &kp N2        &kp N3        &kp N0        &trans           &trans        &trans        &trans        &trans       &trans         &trans        &trans
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮  ╭─────────────├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
                               &trans       &trans        &ltog LCMD NUM        &trans        &trans           &trans        &trans        &trans        &trans        &trans
//                           ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        num_word_layer {
            display-name = "num word";
            bindings = <

//╭──────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────────╮
   &trans        &trans        &trans        &trans        &trans        &trans                                       &trans        &trans        &trans        &trans        &trans          &trans
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
   &trans        &trans        &kp N7       &kp N8        &kp N9        &trans                                       &trans        &trans     &trans        &trans        &trans          &trans
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
   &trans        &trans        &kp N4       &kp N5        &kp N6        &trans                                      &hmr HYPER H   &hmr RCMD J  &hmr RCTRL K  &hmr RALT L   &hmr RSHFT BSPC &trans
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮  ╭─────────────├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
   &trans        &trans        &kp N1       &kp N2        &kp N3        &kp N0        &trans           &trans        &trans        &trans        &trans       &trans         &trans        &trans
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮  ╭─────────────├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
                               &trans       &trans        &ltog LCMD NUM_WORD &trans        &trans           &trans        &trans        &trans        &trans        &trans
//                           ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
            >;
           sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        fun_layer {
            display-name = "fun";
            bindings = <
//╭──────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────────╮
   &trans       &trans        &trans        &trans        &trans        &trans                                       &trans        &trans        &trans        &trans        &trans          &trans
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
   &trans       &trans        &kp F7        &kp F8        &kp F9        &kp F10                                      &trans        &trans        &trans        &trans        &trans          &trans
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
   &trans       &trans        &kp F4        &kp F5        &kp F6        &kp F11                                      &sk HYPER     &sk RCMD     &sk RCTRL     &sk RALT      &sk RSHFT        &trans
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮  ╭─────────────├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
   &trans       &trans        &kp F1        &kp F2        &kp F3        &kp F12       &trans           &trans        &trans        &trans        &trans        &trans        &trans          &trans
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮  ╭─────────────├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
                              &trans        &trans        &ltog LCMD FUN  &trans        &trans           &trans        &trans        &trans        &trans        &trans
//                           ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        adjust_layer {
            display-name = "adjust";
            bindings = <
//╭──────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────────╮
   &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                 &none         &none         &none         &none         &none           &none
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
   &ext_power EP_TOG &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI &rgb_ug RGB_EFF                 &none         &none         &none         &none         &none           &none
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
   &none        &rgb_ug RGB_BRD &rgb_ug RGB_BRI &none         &none         &none                                    &none         &none         &none         &none         &none           &none
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮  ╭─────────────├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
   &none        &none         &none         &none         &none         &none         &rgb_ug RGB_TOG  &none         &none         &none         &none         &none         &none           &none
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮  ╭─────────────├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
                              &none         &none         &none         &none         &none            &none         &none         &none         &none         &none
//                           ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        base_no_hrm_layer {
            display-name = "base no hrm";
// ------------------------------------------------------------------------------------------------------------
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | ALT  | ESC | SPACE |  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
//╭──────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────────╮
   &kp GRAVE     &kp N1        &kp N2        &kp N3       &kp N4        &kp N5                                       &kp N6        &kp N7        &kp N8        &kp N9        &kp N0          &kp BSPC
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
   &kp TAB       &kp Q         &kp W         &kp E        &kp R         &kp T                                        &kp Y         &kp U         &kp I         &kp O         &kp P           &kp BSLH
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
   &kp ESC       &kp A         &kp S        &kp D &kp F  &kp G                                 &kp H  &kp J   &kp K  &kp L   &kp BSPC &kp SQT
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮  ╭─────────────├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
   &kp LMK     &kp Z         &kp X         &kp C         &kp V    &kp B         &kp C_MUTE       &none         &kp N         &hmr MEH M    &kp COMMA     &kp DOT       &kp FSLH        &kp RMK
//├──────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮  ╭─────────────├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────────┤
                              &mt LCTRL LMK2 &mt LALT LMK1 &ltog LCMD BASE_NOT_HRM &lt NAV SPACE &mt HYPER  RET      &num_nw NUM NUM &shft_cw    &lt FUN BSPC  &lt ADJUST RMK1 &mt MEH RMK2
//                           ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};

//         nav_layer {
//             display-name = "nav";
//             bindings = <
// &none &none &none &none &none &none                   &none &none &none &none &none &none
// &none &none &none &none &none &none &none      &none  &none &none &none &none &none &none
//             &none &none &none &none &none      &none &none &none &none &none
//             >;
//             sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
//         };
//╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
// 
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
// 
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
//              LCMD         LOPTION       LSHIFT                                                     PAGE DOWN       <-            v              ^           ->            
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮  ╭─────────────├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
// 
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮  ╭─────────────├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
//
//                       ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//         nav_layer {
//             display-name = "nav";
//             bindings = <
// &none       &none         &none         &none         &none         &none                                        &none        &none &none &none &none &none
// &none       &sk LGUI      &sk LALT      &sk LCTRL     &sk LSHIFT    &none                                        &none        &none &none &none &none &none
// &none       &none         &none         &none         &none         &none                                        &none        &kp LEFT       &kp DOWN      &kp UP         &kp RIGHT     &none
// &none       &none         &none         &none         &none         &none         &kp C_MUTE       &none         &none        &kp HOME       &kp PG_DN     &kp PG_UP      &kp END       &none 
//                           &none         &none         &none         &none         &none            &kp RET       &kp BKSPC    &none &none &none &none
//             >;
//
//             sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
//
//         };

//         symbol_layer {
//             display-name = "symbol";
// // TODO: Some binds are waiting for shifted keycode support.
// // ------------------------------------------------------------------------------------------------------------
// // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
// // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
// // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
// //               |     |      |      |      |        |  |       |      |       |       |      |
//             bindings = <
// &trans    &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                    &kp F6    &kp F7   &kp F8    &kp F9    &kp F10   &kp F11
// &kp GRAVE &kp N1    &kp N2    &kp N3      &kp N4    &kp N5                    &kp N6    &kp N7   &kp N8    &kp N9    &kp N0    &kp F12
// &trans    &kp EXCL  &kp AT    &kp HASH    &kp DLLR  &kp PRCNT                 &kp CARET &kp AMPS &kp ASTRK &kp LPAR  &kp RPAR  &kp PIPE
// &trans    &kp EQUAL &kp MINUS &kp PLUS &kp LBRC  &kp RBRC   &trans &trans  &kp LBKT  &kp RBKT &kp SEMI  &kp COLON &kp BSLH  &trans
//                     &trans    &trans      &trans    &trans     &trans &trans  &trans    &trans   &trans    &trans
//             >;
//
//             sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
//         };

//         raise_layer {
//             display-name = "raise";
// // ------------------------------------------------------------------------------------------------------------
// // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
// // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
// // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
// //                |      |       |       |      |      |  |      |      |      |       |      |
//             bindings = <
// &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                  &trans    &trans    &trans   &trans    &trans  &trans
// &trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans                        &kp PG_UP &trans    &kp UP   &trans    &kp N0  &trans
// &trans     &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &kp CLCK                      &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT &kp DEL &kp BSPC
// &trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans        &trans  &trans  &trans    &trans    &trans   &trans    &trans  &trans
//                         &trans       &trans       &trans       &trans        &trans  &trans  &trans    &trans    &trans   &trans
//             >;
//
//             sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
//         };

//         adjust_layer {
// // ----------------------------------------------------------------------------------------------------------------------------
// // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
// // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
// // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
// // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
// //                    |         |         |         |         |         | |      |      |      |       |      |
//             display-name = "adjust";
//             bindings = <
// &bt BT_CLR        &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                            &none &none &none &none &none &none
// &ext_power EP_TOG &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI &rgb_ug RGB_EFF                         &none &none &none &none &none &none
// &none             &rgb_ug RGB_BRD &rgb_ug RGB_BRI &none           &none           &none                                   &none &none &none &none &none &none
// &none             &none           &none           &none           &none           &none            &rgb_ug RGB_TOG &none  &none &none &none &none &none &none
//                                   &none           &none           &none           &none            &none           &none  &none &none &none &none
//             >;
//         };
//     };
// };
